openapi: 3.0.0
info:
  title: Scriptly API
  description: API para o gerenciamento de posts e assinaturas do Scriptly
  version: 1.0.0
  contact:
    name: Suporte Scriptly
    email: suporte@scriptly.app
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api
    description: Servidor de Desenvolvimento
  - url: https://api.scriptly.app/api
    description: Servidor de Produção

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          description: Mensagem de erro descritiva
        code:
          type: string
          description: Código do erro
        details:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    User:
      type: object
      properties:
        id:
          type: string
          example: user_123
        email:
          type: string
          format: email
          example: usuario@exemplo.com
        subscriptionStatus:
          type: string
          enum: [ACTIVE, INACTIVE, TRIALING, PAST_DUE, CANCELED, UNPAID]
          example: ACTIVE
        currentPeriodEnd:
          type: string
          format: date-time
          example: "2023-12-31T23:59:59.000Z"
    Post:
      type: object
      properties:
        id:
          type: string
          example: post_123
        title:
          type: string
          example: Meu Primeiro Post
        content:
          type: string
          example: Conteúdo do post...
        createdAt:
          type: string
          format: date-time
          example: "2023-01-01T00:00:00.000Z"
    SubscriptionStatus:
      type: object
      properties:
        isPro:
          type: boolean
          example: true
        status:
          type: string
          enum: [ACTIVE, INACTIVE, TRIALING, PAST_DUE, CANCELED, UNPAID]
          example: ACTIVE
        currentPeriodEnd:
          type: string
          format: date-time
          example: "2023-12-31T23:59:59.000Z"
        plan:
          type: string
          example: pro
        interval:
          type: string
          enum: [monthly, yearly]
          example: monthly
    CheckoutSession:
      type: object
      properties:
        url:
          type: string
          format: uri
          example: https://checkout.stripe.com/c/pay/cs_test_...

paths:
  /users/me:
    get:
      tags:
        - Usuários
      summary: Obter informações do usuário autenticado
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Dados do usuário autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /posts:
    get:
      tags:
        - Posts
      summary: Listar posts do usuário
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de posts do usuário
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      tags:
        - Posts
      summary: Criar um novo post
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - content
              properties:
                title:
                  type: string
                  minLength: 1
                  maxLength: 255
                  example: Meu Novo Post
                content:
                  type: string
                  minLength: 1
                  example: Conteúdo do novo post...
      responses:
        '201':
          description: Post criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /subscriptions/create-checkout-session:
    post:
      tags:
        - Assinaturas
      summary: Criar sessão de checkout para assinatura
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - plan
                - interval
              properties:
                plan:
                  type: string
                  enum: [pro]
                  example: pro
                interval:
                  type: string
                  enum: [monthly, yearly]
                  example: monthly
      responses:
        '200':
          description: Sessão de checkout criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSession'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
  /subscriptions/status:
    get:
      tags:
        - Assinaturas
      summary: Verificar status da assinatura
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Status da assinatura
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionStatus'
  
  /webhooks/stripe:
    post:
      tags:
        - Webhooks
      summary: Webhook do Stripe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Webhook processado com sucesso
        '400':
          description: Erro ao processar webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
