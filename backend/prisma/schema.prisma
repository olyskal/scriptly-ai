generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SubscriptionStatus {
  ACTIVE
  INACTIVE
  TRIALING
  PAST_DUE
  CANCELED
  UNPAID
}

model User {
  id                 String             @id @default(cuid())
  email              String             @unique
  posts              Post[]
  schedules          Schedule[]
  subscriptionId     String?            @unique
  subscriptionStatus SubscriptionStatus  @default(INACTIVE)
  currentPeriodEnd   DateTime?
  stripeCustomerId   String?            @unique
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  tokenUsage         TokenUsage[]


  @@map("users")
}

model Post {
  id        String     @id @default(cuid())
  userId    String
  user      User       @relation(fields: [userId], references: [id])
  topic     String
  tone      String
  content   String
  schedules Schedule[]
  createdAt DateTime   @default(now())
}

model Schedule {
  id         String     @id @default(cuid())
  userId     String
  postId     String
  publishAt  DateTime
  status     String     @default("scheduled")
  createdAt  DateTime   @default(now())

  user       User       @relation(fields: [userId], references: [id])
  post       Post       @relation(fields: [postId], references: [id])
}

model TokenUsage {
  id               String   @id @default(cuid())
  userId           String
  user             User     @relation(fields: [userId], references: [id])
  tokens           Int
  promptTokens     Int
  completionTokens Int
  model           String
  createdAt        DateTime @default(now())
  postId          String?
  post            Post?    @relation(fields: [postId], references: [id])

  @@index([userId, createdAt])
  @@map("token_usage")
}
